int checkRecord(int n)
{
    int dp[2][2][3][3];
    memset(dp,0,sizeof(dp));
    dp[0][0][0][2]=1;
    for(int i=1;i<=n;i++)
    {
        memset(dp[i%2],0,sizeof(dp[i%2]));
        //最后一个字母为A
        dp[i%2][1][0][0]=dp[(i-1)%2][0][0][2];//最后两个字母为PA
        for(int j=1;j<3;j++)
        {
            dp[i%2][1][0][0]=(dp[i%2][1][0][0]+dp[(i-1)%2][0][j][1])%1000000007;//最后两个字母为JA
        }
        //最后一个字母为J
        for(int j=0;j<2;j++)
        {
            dp[i%2][j][1][1]=dp[(i-1)%2][j][0][2];//最后两个字母为PJ
            dp[i%2][j][2][1]=dp[(i-1)%2][j][1][1];//最后两个字母为JJ
        }
        dp[i%2][1][1][1]=(dp[i%2][1][1][1]+dp[(i-1)%2][1][0][0])%1000000007;//最后两个字母为AJ
        //最后一个字母为P
        for(int j=0;j<2;j++)
        {
            dp[i%2][j][0][2]=dp[(i-1)%2][j][0][2];//最后两个字母为PP
            for(int k=1;k<3;k++)
            {
                dp[i%2][j][0][2]=(dp[i%2][j][0][2]+dp[(i-1)%2][j][k][1])%1000000007;//最后两个字母为JP
            }
        }
        dp[i%2][1][0][2]=(dp[i%2][1][0][2]+dp[(i-1)%2][1][0][0])%1000000007;//最后两个字母为AP
    }
    int ans=0;
    for(int i=0;i<2;i++)
    {
        for(int j=0;j<3;j++)
        {
            for(int k=0;k<3;k++)
            {
                ans=(ans+dp[n%2][i][j][k])%1000000007;
            }
        }
    }
    return ans;
}
